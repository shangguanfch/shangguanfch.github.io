<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>About Domain</title>
    <url>/About-Domain/</url>
    <content><![CDATA[<p><del>domain name: thanksforfun.me</del><br>domain name: shangguanfch.github.io<br>domain name registrar: <a href="https://www.namecheap.com/">https://www.namecheap.com</a><br>DNS hosting provider: <a href="https://www.netlify.com/">https://www.netlify.com</a></p>
<blockquote>
<p>If not use default nameservers of domain registrar, go to your domain registrar and point your domain to the nameservers provided by your DNS hosting provider.</p>
</blockquote>
<span id="more"></span>

<p>How to <a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages/">Using a custom domain with GitHub Pages</a></p>
<ul>
<li><a href="https://help.github.com/articles/setting-up-an-apex-domain/">Setting up an apex domain</a></li>
<li><a href="https://help.github.com/articles/setting-up-a-www-subdomain/">Setting up a www subdomain</a></li>
<li><a href="https://help.github.com/articles/setting-up-a-custom-subdomain/">Setting up a custom subdomain</a></li>
<li><a href="https://help.github.com/categories/customizing-github-pages/">Further reading: Customizing GitHub Pages</a></li>
</ul>
<p>How to <a href="https://www.netlify.com/docs/">Netlify builds, deploys, and hosts your front end</a></p>
<p>How to <a href="https://firebase.google.com/docs/hosting/">Firebase Hosting</a></p>
]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>record</tag>
        <tag>blog</tag>
        <tag>domain</tag>
      </tags>
  </entry>
  <entry>
    <title>About Text Editors</title>
    <url>/About-Text-Editors/</url>
    <content><![CDATA[<p>This article is a brief introduction of some text editors. There are several text editors for coding and writing. Which one should be chosen? It had led to several debetes.</p>
<span id="more"></span>

<h2 id="Guides"><a href="#Guides" class="headerlink" title="Guides"></a>Guides</h2><p>Read these articles to get a simple impression.</p>
<ul>
<li><a href="http://blog.liveedu.tv/10-best-text-editors-programming-2016/">10+ Best Text Editors For Programming 2016&#x2F;2017</a></li>
<li><a href="https://www.codementor.io/mattgoldspink/best-text-editor-atom-sublime-vim-visual-studio-code-du10872i7">Best Text Editor? Atom vs Sublime vs Visual Studio Code vs Vim 2016</a></li>
<li><a href="http://www.techradar.com/news/the-best-free-text-editor-2017">The best free text editor 2017</a></li>
</ul>
<p>Explore more:</p>
<ul>
<li><a href="https://www.g2crowd.com/categories/text-editor">A Simple Comparison for You</a></li>
<li><a href="https://www.slant.co/topics/12/~best-programming-text-editors">A Ranking of Best Programming Text Editors</a></li>
</ul>
<p>Read <a href="https://insights.stackoverflow.com/survey/">Stack Overflow Annual Developer Survey</a> to find the popular editor.</p>
<ul>
<li><a href="https://insights.stackoverflow.com/survey/2017#technology-most-popular-developer-environments-by-occupation">Stack Overflow Developer Survey 2017#technology-most-popular-developer-environments-by-occupation</a></li>
<li><a href="https://insights.stackoverflow.com/survey/2016#technology-development-environments">Stack Overflow Developer Survey 2016#technology-development-environments</a></li>
</ul>
<p><a href="https://github.com/sindresorhus/awesome">GitHub Awesome</a>: curated list of awesome lists. Find guides to use these editors in awesome lists.</p>
<p>See also Zhihu articles:</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/21434126">https://zhuanlan.zhihu.com/p/21434126</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/21444928">https://zhuanlan.zhihu.com/p/21444928</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/22309567">https://zhuanlan.zhihu.com/p/22309567</a></li>
</ul>
<h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a><a href="https://vim.sourceforge.io/">Vim</a></h2><p>Vim - the ubiquitous text editor.</p>
<p>Vim is a highly configurable text editor built to make creating and changing any kind of text very efficient. It is included as “vi” with most UNIX systems and with Apple OS X.</p>
<p>Vim Tips wiki: <a href="http://vim.wikia.com/wiki/Vim_Tips_Wiki">http://vim.wikia.com/wiki/Vim_Tips_Wiki</a></p>
<p><a href="https://spacevim.org/">SpaceVim</a>: a community-driven vim distribution inspired by spacemacs.</p>
<h2 id="Emacs"><a href="#Emacs" class="headerlink" title="Emacs"></a><a href="https://www.gnu.org/software/emacs/">Emacs</a></h2><p>An extensible, customizable, free&#x2F;libre text editor — and more.</p>
<p>Emacs Wiki: <a href="https://www.emacswiki.org/emacs/SiteMap">https://www.emacswiki.org/emacs/SiteMap</a></p>
<p><a href="http://spacemacs.org/">Spacemacs</a>: A community-driven Emacs distribution - The best editor is neither Emacs nor Vim, it’s Emacs and Vim!</p>
<h2 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a><a href="http://www.sublimetext.com/">Sublime Text</a></h2><p>A sophisticated text editor for code, markup and prose.</p>
<h2 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a><a href="https://code.visualstudio.com/">Visual Studio Code</a></h2><p>Free. Open source. Runs everywhere.</p>
<p>In Settings, search <code>Terminal › Integrated › Default Profile: Windows</code> to change default profile shell.</p>
<p>Advanced use: <a href="/Use-Visual-Studio-Code">Use Visual Studio Code</a></p>
<h2 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a><del><a href="https://atom.io/">Atom</a></del></h2><p>Atom is closed now.</p>
<p>Atom is a text editor that’s modern, approachable, yet hackable to the core—a tool you can customize to do anything but also use productively without ever touching a config file.</p>
<p>It’s hard to install packages from <a href="https://github.com/atom/apm">apm</a> in China. If you encouter some problems while installing packages, follow steps below.</p>
<p>Use npm mirror of China.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<p>Or set proxy for apm. If you use SS or SSR, you can run commands as follows (may need modifying to suit your personal settings).</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apm config set strict-ssl false</span><br><span class="line">apm config set http-proxy socks5://127.0.0.1:1080</span><br><span class="line">apm config set https-proxy socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure>
<p>View configuration at <code>~/.atom/.apmrc</code>. For more information of using apm in China, visit <a href="https://atom-china.org/t/atom/797/2">https://atom-china.org/t/atom/797/2</a>.</p>
<p>Welcome to <a href="https://atom-china.org/">Atom China</a>.</p>
]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>record</tag>
        <tag>editor</tag>
      </tags>
  </entry>
  <entry>
    <title>Ccross the Great Firewall</title>
    <url>/Cross-the-Great-Firewall/</url>
    <content><![CDATA[<blockquote>
<p>Across the Great Wall we can reach every corner in the world.</p>
</blockquote>
<p>The Great Firewall of China (GFW) is the combination of legislative and technological actions that have been taken by the Chinese government. For more information, visit <a href="https://en.wikipedia.org/wiki/Great_Firewall">https://en.wikipedia.org/wiki/Great_Firewall</a>.</p>
<p>How to deploy tools on the server to cross GFW? I will give a brief introduction, use CentOS 7+ as my server OS. (please refer to <a href="https://sspai.com/post/39828">https://sspai.com/post/39828</a>)</p>
<span id="more"></span>

<h2 id="Shell-Script"><a href="#Shell-Script" class="headerlink" title="Shell Script"></a>Shell Script</h2><p>Easy way to install Shadowsocks-Python&#x2F;ShadowsocksR&#x2F;Shadowsocks-Go&#x2F;Shadowsocks-libev, refer to <a href="https://teddysun.com/486.html">https://teddysun.com/486.html</a>. You can see all the souce code in <a href="https://github.com/teddysun/shadowsocks_install">https://github.com/teddysun/shadowsocks_install</a>.</p>
<blockquote>
<p>Update: it’s highly recommended to use <a href="https://github.com/shangguanfch/Twist">Twist</a> to setup Shadowsocks-libev server.</p>
</blockquote>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><p>Become root, and run commands as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh</span><br><span class="line">chmod +x shadowsocks-all.sh</span><br><span class="line">./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</span><br></pre></td></tr></table></figure>

<p>This script run shadowsocks at startup.</p>
<h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Shadowsocks-Python</span><br><span class="line">/etc/init.d/shadowsocks-python start/stop/restart/status</span><br><span class="line"># ShadowsocksR</span><br><span class="line">/etc/init.d/shadowsocks-r start/stop/restart/status</span><br><span class="line"># Shadowsocks-Go</span><br><span class="line">/etc/init.d/shadowsocks-go start/stop/restart/status</span><br><span class="line"># Shadowsocks-libev</span><br><span class="line">/etc/init.d/shadowsocks-libev start/stop/restart/status</span><br></pre></td></tr></table></figure>
<h3 id="Uninstallation"><a href="#Uninstallation" class="headerlink" title="Uninstallation"></a>Uninstallation</h3><p>Become root, and run command as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./shadowsocks-all.sh uninstall</span><br></pre></td></tr></table></figure>
<p>It only uninstall one version.</p>
<h2 id="Install-by-Yourself"><a href="#Install-by-Yourself" class="headerlink" title="Install by Yourself"></a>Install by Yourself</h2><p>For more information, visit <a href="https://shadowsocks.org/en/download/servers.html">https://shadowsocks.org/en/download/servers.html</a>.</p>
<h3 id="Shadowsocks-libev"><a href="#Shadowsocks-libev" class="headerlink" title="Shadowsocks-libev"></a>Shadowsocks-libev</h3><p>For more information, visit <a href="https://github.com/shadowsocks/shadowsocks-libev#build-from-source-with-centos">https://github.com/shadowsocks/shadowsocks-libev#build-from-source-with-centos</a>. See also <a href="https://gist.github.com/aa65535/ea090063496b0d3a1748">https://gist.github.com/aa65535/ea090063496b0d3a1748</a>.</p>
<p>Build From Source With CentOS:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># If you are using CentOS 7, you need to install these requirements to build from source code:</span><br><span class="line">yum install epel-release -y</span><br><span class="line">yum install gcc gettext autoconf libtool automake make pcre-devel asciidoc xmlto udns-devel libev-devel libsodium-devel mbedtls-devel -y</span><br></pre></td></tr></table></figure>

<p>Or install From Repository:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># enable repo via dnf</span><br><span class="line">su -c &#x27;dnf copr enable librehat/shadowsocks&#x27;</span><br><span class="line"></span><br><span class="line"># then, install shadowsocks-libev via dnf</span><br><span class="line">su -c &#x27;dnf update&#x27;</span><br><span class="line">su -c &#x27;dnf install shadowsocks-libev&#x27;</span><br></pre></td></tr></table></figure>

<p>Usage:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># edit the configuration file</span><br><span class="line">sudo vim /etc/shadowsocks-libev/config.json</span><br><span class="line"></span><br><span class="line"># auto start when boot</span><br><span class="line">chkconfig --add shadowsocks-libev</span><br><span class="line">chkconfig shadowsocks-libev on</span><br><span class="line"></span><br><span class="line"># start the service</span><br><span class="line"># for sysvinit,</span><br><span class="line">/etc/init.d/shadowsocks-libev start</span><br><span class="line"># or for systemd,</span><br><span class="line">systemctl start shadowsocks-libev</span><br><span class="line"># or for service</span><br><span class="line">service shadowsocks-libev start</span><br></pre></td></tr></table></figure>

<h3 id="ShadowsocksR"><a href="#ShadowsocksR" class="headerlink" title="ShadowsocksR"></a>ShadowsocksR</h3><p>For more information, visit <a href="https://github.com/shadowsocksr-rm/shadowsocksr">https://github.com/shadowsocksr-rm/shadowsocksr</a>. See also: <a href="https://github.com/Ssrbackup/shadowsocks-rss">https://github.com/Ssrbackup/shadowsocks-rss</a>.</p>
<blockquote>
<p>ShadowsocksR is over, a person continues the work of ShadowsocksR (he named it as ShadowsocksRR), please visit <a href="https://github.com/shadowsocksrr/shadowsocksr/tree/akkariiin/dev">https://github.com/shadowsocksrr/shadowsocksr/tree/akkariiin/dev</a>.</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># if not preinstall git, install git</span><br><span class="line">yum install git</span><br><span class="line"></span><br><span class="line">git clone https://github.com/shadowsocksrr/shadowsocksr.git</span><br></pre></td></tr></table></figure>

<p>If you clone it into “&#x2F;shadowsocksr”, move to “&#x2F;shadowsocksr”, then run:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># (optional) change branch to akkariiin/master (SSRR)</span><br><span class="line">git checkout -b remote/origin/akkariiin/master origin/akkariiin/master</span><br><span class="line"></span><br><span class="line">bash initcfg.sh # not neccessary for SSRR</span><br></pre></td></tr></table></figure>

<p>Move to “&#x2F;shadowsocksr&#x2F;shadowsocks”, then run:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python server.py -p 443 -k password -m aes-128-cfb -O auth_aes128_md5 -o tls1.2_ticket_auth_compatible</span><br></pre></td></tr></table></figure>

<p>You can also use a configuration file instead (recommend). If your SSR directory is <code>~/shadowsocksr</code>, edit the file “~&#x2F;shadowsocksr&#x2F;user-config.json”.<br>Then, run server.py:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># move to &quot;~/shadowsocksr/shadowsocks&quot;</span><br><span class="line">cd ~/shadowsocksr/shadowsocks</span><br><span class="line"># and just run:</span><br><span class="line">python server.py</span><br><span class="line"># or more elegant:</span><br><span class="line">python server.py -d start/stop/restart</span><br></pre></td></tr></table></figure>

<p>Other way:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># to run in the background</span><br><span class="line">./logrun.sh</span><br><span class="line"># to stop</span><br><span class="line">./stop.sh</span><br><span class="line"># to monitor the log</span><br><span class="line">./tail.sh</span><br></pre></td></tr></table></figure>

<h3 id="V2Ray"><a href="#V2Ray" class="headerlink" title="V2Ray"></a>V2Ray</h3><p>For more information, visit <a href="https://www.v2ray.com/">https://www.v2ray.com</a>.</p>
<p>Become root, and run command as follows:</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https:<span class="regexp">//i</span>nstall.direct/go.sh)</span><br></pre></td></tr></table></figure>
<p>This shell script will run V2Ray at startup (support system with Systemd or Debian&#x2F;Ubuntu).<br>If succeed, you need:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># edit the file</span><br><span class="line">vi /etc/v2ray/config.json</span><br><span class="line"># use V2Ray</span><br><span class="line">service v2ray start/stop/status/reload/restart/force-reload</span><br></pre></td></tr></table></figure>

<h2 id="BBR-to-accelerate"><a href="#BBR-to-accelerate" class="headerlink" title="BBR: to accelerate"></a>BBR: to accelerate</h2><p>For more information, visit <a href="https://github.com/google/bbr">https://github.com/google/bbr</a>.</p>
<h3 id="Shell-Script-1"><a href="#Shell-Script-1" class="headerlink" title="Shell Script"></a>Shell Script</h3><p>Easy way of deploying BBR, from <a href="https://teddysun.com/489.html">https://teddysun.com/489.html</a>.</p>
<p>Become root, and run commands as follows:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line">chmod +x bbr.sh</span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure>

<p>Enter y and it will reboot automatically. You can edit <code>/etc/sysctl.conf</code> to optimize performance, see <a href="https://jasper-1024.github.io/2016/06/27/VPS%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%972/">https://jasper-1024.github.io/2016/06/27/VPS%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%972/</a>.</p>
<h3 id="Or-Deploy-it-by-Yourself"><a href="#Or-Deploy-it-by-Yourself" class="headerlink" title="Or Deploy it by Yourself"></a>Or Deploy it by Yourself</h3><p>For more information, visit <a href="https://github.com/iMeiji/shadowsocks_install/wiki/%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95">iMeiji&#x2F;shadowsocks_install&#x2F;wiki</a> and <a href="https://www.vultr.com/docs/how-to-deploy-google-bbr-on-centos-7">Vultr Docs: How to Deploy Google BBR on CentOS 7</a>.</p>
<h3 id="Install-new-Linux-Kernel"><a href="#Install-new-Linux-Kernel" class="headerlink" title="Install new Linux Kernel"></a>Install new Linux Kernel</h3><p>Visit <a href="http://elrepo.org/linux/kernel/el7/x86_64/RPMS/">http://elrepo.org/linux/kernel/el7/x86_64/RPMS/</a> to find the latest kernel.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># replace kernel</span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml -y</span><br><span class="line"></span><br><span class="line"># verify that the installation was successful</span><br><span class="line">rpm -qa | grep kernel</span><br><span class="line"># delete old kernel (alternative)</span><br><span class="line">rpm -ev</span><br><span class="line"></span><br><span class="line"># update grub and roboot</span><br><span class="line">egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \&#x27;</span><br><span class="line">grub2-set-default 0  #default 0 means set first kernel as default</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h3 id="Enable-BBR"><a href="#Enable-BBR" class="headerlink" title="Enable BBR"></a>Enable BBR</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># check if kernel version &gt;= 4.9</span><br><span class="line">uname -r</span><br><span class="line"></span><br><span class="line"># check if BBR come into force</span><br><span class="line">lsmod | grep bbr</span><br><span class="line"># if no tcp_bbr in output, you should run:</span><br><span class="line">modprobe tcp_bbr</span><br><span class="line">echo &quot;tcp_bbr&quot; &gt;&gt; /etc/modules-load.d/modules.conf</span><br><span class="line">echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line"># become effective</span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line"># check if &#x27;bbr&#x27; in output  </span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure>

<h2 id="Clients"><a href="#Clients" class="headerlink" title="Clients"></a>Clients</h2><p>Some clients:</p>
<table>
<thead>
<tr>
<th align="center">Description</th>
<th align="center">Address</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Shadowsocks for Windows</td>
<td align="center"><a href="https://github.com/shadowsocks/shadowsocks-windows/releases">https://github.com/shadowsocks/shadowsocks-windows/releases</a></td>
</tr>
<tr>
<td align="center">Shadowsocks for Android</td>
<td align="center"><a href="https://github.com/shadowsocks/shadowsocks-android">https://github.com/shadowsocks/shadowsocks-android</a></td>
</tr>
<tr>
<td align="center">Shadowsocks-Qt5, a cross-platform shadowsocks GUI client</td>
<td align="center"><a href="https://github.com/shadowsocks/shadowsocks-qt5">https://github.com/shadowsocks/shadowsocks-qt5</a></td>
</tr>
<tr>
<td align="center">ShadowsocksR for Windows, use <a href="http://www.7-zip.org/">7-Zip</a> to extract the ShadowsocksR archive</td>
<td align="center"><a href="https://github.com/shadowsocksrr/shadowsocksr-csharp">https://github.com/shadowsocksrr/shadowsocksr-csharp</a></td>
</tr>
<tr>
<td align="center">ShadowsocksR for Andriod</td>
<td align="center"><a href="https://github.com/shadowsocksrr/shadowsocksr-android">https://github.com/shadowsocksrr/shadowsocksr-android</a></td>
</tr>
<tr>
<td align="center">Clash for Windows</td>
<td align="center"><a href="https://github.com/erguotou520/electron-ssr">https://github.com/erguotou520/electron-ssr</a></td>
</tr>
<tr>
<td align="center">V2Ray-core</td>
<td align="center"><a href="https://github.com/v2ray/v2ray-core">https://github.com/v2ray/v2ray-core</a></td>
</tr>
<tr>
<td align="center">V2RayN for Windows, friendly to new hand</td>
<td align="center"><a href="https://github.com/v2ray/v2rayN">https://github.com/v2ray/v2rayN</a></td>
</tr>
<tr>
<td align="center">other V2Ray client</td>
<td align="center"><a href="https://www.v2ray.com/chapter_01/3rd_party.html">https://www.v2ray.com/chapter_01/3rd_party.html</a></td>
</tr>
</tbody></table>
<h3 id="Shadowsocks-libev-1"><a href="#Shadowsocks-libev-1" class="headerlink" title="Shadowsocks-libev"></a><a href="https://github.com/shadowsocks/shadowsocks-libev">Shadowsocks-libev</a></h3><p>Install Shadowsocks-libev on Arch Linux.</p>
<p>References:</p>
<ul>
<li>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/Shadowsocks_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Shadowsocks_(简体中文)</a></li>
<li>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/Shadowsocks">https://wiki.archlinux.org/index.php/Shadowsocks</a></li>
</ul>
<p>Install shadowsocks-libev.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S shadowsocks-libev</span><br></pre></td></tr></table></figure>

<p>Edit <code>/etc/shadowsocks/config.json</code>. For more information of config.json, visit <a href="https://shadowsocks.org/en/config/quick-guide.html">https://shadowsocks.org/en/config/quick-guide.html</a>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir /etc/shadowsocks</span><br><span class="line">sudo vi /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure>

<p>An example of <code>/etc/shadowsocks/config.json</code>.</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;my_server_ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server_port&quot;</span><span class="punctuation">:</span><span class="number">8388</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;local_address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span><span class="punctuation">:</span><span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;my_password&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span><span class="punctuation">:</span><span class="number">300</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;aes-256-cfb&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fast_open&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>start it using the configuration file</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ss-local -c /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure>

<p>use <a href="https://www.freedesktop.org/wiki/Software/systemd/">systemd</a> to start and auto-start</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># start</span><br><span class="line">sudo systemctl start shadowsocks-libev@config</span><br><span class="line"># start at startup</span><br><span class="line">sudo systemctl enable shadowsocks-libev@config</span><br></pre></td></tr></table></figure>

<h3 id="Shadowsocksr-libev"><a href="#Shadowsocksr-libev" class="headerlink" title="Shadowsocksr-libev"></a><a href="https://github.com/shadowsocksrr/shadowsocksr-libev">Shadowsocksr-libev</a></h3><p>Install Shadowsocksr-libev on Arch Linux.</p>
<p>AUR: <a href="https://aur.archlinux.org/packages/shadowsocksr-libev/">https://aur.archlinux.org/packages/shadowsocksr-libev/</a></p>
<p>See also:</p>
<ul>
<li><del><a href="https://eatradish.moe/2017/04/07/zai-arch-zhong-shi-yong-shadowsocksr/">https://eatradish.moe/2017/04/07/zai-arch-zhong-shi-yong-shadowsocksr/</a></del></li>
<li><a href="https://sakiiily.moe/2017/04/07/zai-arch-zhong-shi-yong-shadowsocksr/">https://sakiiily.moe/2017/04/07/zai-arch-zhong-shi-yong-shadowsocksr/</a></li>
</ul>
<p>Install shadowsocksr-libev.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yaourt -S shadowsocksr-libev</span><br></pre></td></tr></table></figure>

<p>Edit <code>/etc/shadowsocks/config.json</code>. For more information of config.json, visit <a href="https://git.io/vdPZ7">SSR Wiki: Python client setup (Mult language)</a>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir /etc/shadowsocks</span><br><span class="line">sudo vi /etc/shadowsocks/config.json</span><br></pre></td></tr></table></figure>

<p>An example of <code>/etc/shadowsocks/config.json</code>.</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="string">&quot;0.0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server_ipv6&quot;</span><span class="punctuation">:</span> <span class="string">&quot;::&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server_port&quot;</span><span class="punctuation">:</span><span class="number">8388</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;local_address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span><span class="punctuation">:</span><span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;my_password&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span><span class="punctuation">:</span><span class="number">300</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;udp_timeout&quot;</span><span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;aes-256-cfb&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auth_aes128_md5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;protocol_param&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;obfs&quot;</span><span class="punctuation">:</span><span class="string">&quot;http_simple&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;obfs_param&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fast_open&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workers&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>start and auto-start.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># start</span><br><span class="line">sudo systemctl start shadowsocks-libev@config</span><br><span class="line"># start at startup</span><br><span class="line">sudo systemctl enable shadowsocks-libev@config</span><br></pre></td></tr></table></figure>

<h2 id="Proxy-SwithyOmega-for-Chrome"><a href="#Proxy-SwithyOmega-for-Chrome" class="headerlink" title="Proxy SwithyOmega for Chrome"></a>Proxy SwithyOmega for Chrome</h2><p>Changing proxy settings has never been so convenient. Take <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?hl=en">Proxy SwithyOmega for Chrome</a> as a modern version of the “Proxy Settings” dialog, designed to be simpler, quicker and more powerful, specially optimized for Chrome.</p>
]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>record</tag>
        <tag>gfw</tag>
        <tag>vps</tag>
        <tag>git</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Git on the Server</title>
    <url>/Git-on-the-Server/</url>
    <content><![CDATA[<p>Git on the Server, refer to <a href="https://www.qcloud.com/developer/labs/lab/10045">https://www.qcloud.com/developer/labs/lab/10045</a></p>
<p>Server system: CentOS 7.2 x64</p>
<span id="more"></span>

<h2 id="requirements"><a href="#requirements" class="headerlink" title="requirements"></a>requirements</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装依赖库</span></span><br><span class="line">yum <span class="keyword">install</span> curl-devel expat-devel gettext-devel openssl-devel zlib-devel</span><br><span class="line"><span class="comment"># 安装编译工具</span></span><br><span class="line">yum <span class="keyword">install</span> gcc perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure>
<h2 id="install-git"><a href="#install-git" class="headerlink" title="install git"></a>install git</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># choose a directory to store installation package</span><br><span class="line">cd /usr/local/src</span><br><span class="line"></span><br><span class="line"># download package (search for a stable installation package in https://www.kernel.org/pub/software/scm/git/)</span><br><span class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.14.1.tar.xz</span><br><span class="line"># unzip</span><br><span class="line">tar -zvxf git-2.14.1.tar.gz</span><br><span class="line"># go to git directory</span><br><span class="line">cd git-2.14.1</span><br><span class="line"></span><br><span class="line"># compile</span><br><span class="line">make all prefix=/usr/local/git</span><br><span class="line"># install to /usr/local/git </span><br><span class="line">make install prefix=/usr/local/git</span><br></pre></td></tr></table></figure>

<h2 id="change-the-PATH-system-variable"><a href="#change-the-PATH-system-variable" class="headerlink" title="change the PATH system variable"></a>change the PATH system variable</h2><p>将 git 目录加入 PATH</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 将原来的 PATH 指向目录修改为现在的目录</span><br><span class="line">echo &#x27;export PATH=$PATH:/usr/local/git/bin&#x27; &gt;&gt; /etc/bashrc</span><br><span class="line"># execute</span><br><span class="line">source /etc/bashrc</span><br><span class="line"># print git version</span><br><span class="line">git --version</span><br></pre></td></tr></table></figure>

<h2 id="create-git-user-and-set-password"><a href="#create-git-user-and-set-password" class="headerlink" title="create git user and set password"></a>create git user and set password</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># create a git user account</span><br><span class="line">useradd -m gituser</span><br><span class="line"># set password</span><br><span class="line">passwd gituser</span><br></pre></td></tr></table></figure>

<h2 id="init-git-repositores-and-set-user-rights"><a href="#init-git-repositores-and-set-user-rights" class="headerlink" title="init git repositores and set user rights"></a>init git repositores and set user rights</h2><p>创建git仓库并初始化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 创建 /data/repositories 目录用于存放 git 仓库</span><br><span class="line">mkdir -p /data/repositories</span><br><span class="line"></span><br><span class="line"># init</span><br><span class="line">cd /data/repositories</span><br><span class="line">git init --bare test.git</span><br><span class="line"></span><br><span class="line"># set up user access for git repository</span><br><span class="line">chown -R gituser:gituser /data/repositories</span><br><span class="line">chmod 755 /data/repositories</span><br><span class="line"># 查找 git-shell 所在目录，edit /etc/passwd file，the last line should be changed as follows</span><br><span class="line">gituser:x:500:500::/home/gituser:/usr/local/git/bin/git-shell</span><br></pre></td></tr></table></figure>
<p>If follow the steps above, the location will be &#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&#x2F;git-shell, use <code>which git-shell</code> command to check the location</p>
<p>由于安全目的, 限制git账号的ssh连接只能是登录git-shell</p>
<h2 id="use-git-service"><a href="#use-git-service" class="headerlink" title="use git service"></a>use git service</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 克隆 test repo 到本地</span><br><span class="line">cd ~</span><br><span class="line">git clone gituser@&lt;your CVM IP address&gt;:/data/repositories/test.git</span><br></pre></td></tr></table></figure>

<p>Completed.</p>
<p>Further reading: <a href="https://git-scm.com/book/en/v2/Git-on-the-Server-The-Protocols">https://git-scm.com/book/en/v2/Git-on-the-Server-The-Protocols</a></p>
]]></content>
      <categories>
        <category>record</category>
      </categories>
      <tags>
        <tag>record</tag>
        <tag>vps</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Manjaro Linux</title>
    <url>/Install-Manjaro-Linux/</url>
    <content><![CDATA[<p><a href="https://manjaro.org/">Manjaro</a> is a user-friendly Linux distribution based on the independently developed <a href="https://www.archlinux.org/">Arch operating system</a>.</p>
<blockquote>
<p>Arch is backed by <a href="https://wiki.archlinux.org/index.php/Pacman">pacman</a>, a lightweight, simple and fast package manager.<br>The <a href="https://wiki.archlinux.org/index.php/Arch_User_Repository">Arch User Repository</a> (AUR) is a community-driven repository for Arch users.</p>
</blockquote>
<p>It’s easy to install Manjaro Linux (compared with Arch Linux).</p>
<span id="more"></span>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><h3 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h3><p>Download it from</p>
<ul>
<li><a href="https://manjaro.org/get-manjaro/">https://manjaro.org/get-manjaro/</a> or</li>
<li><a href="https://mirrors.tuna.tsinghua.edu.cn/manjaro-cd/release/">https://mirrors.tuna.tsinghua.edu.cn/manjaro-cd/release/</a></li>
</ul>
<h3 id="Burn-an-ISO-File"><a href="#Burn-an-ISO-File" class="headerlink" title="Burn an ISO File"></a>Burn an ISO File</h3><p>It is recommended to use <a href="https://launchpad.net/win32-image-writer/">ImageWriter For Windows</a>, which is a free application designed to write disc images to USB sticks. Other chioce: <a href="http://rufus.akeo.ie/">Rufus</a>.<br>Further reading: <a href="https://wiki.manjaro.org/index.php?title=Burn_an_ISO_File">https://wiki.manjaro.org/index.php?title=Burn_an_ISO_File</a></p>
<blockquote>
<p>Tip: Before burning, you can clean your USB sticks with diskpart.<br>Further reading: <a href="https://technet.microsoft.com/en-us/library/cc766465(v=ws.10).aspx">https://technet.microsoft.com/en-us/library/cc766465(v=ws.10).aspx</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># run cmd.exe and enter &#x27;diskpart&#x27;, or just run diskpart.exe</span><br><span class="line"># in diskpart window, run commands as follows</span><br><span class="line">select disk 1</span><br><span class="line">clean</span><br></pre></td></tr></table></figure>

<h3 id="Installation-1"><a href="#Installation-1" class="headerlink" title="Installation"></a>Installation</h3><p>Change BIOS settings (Esc&#x2F;F1&#x2F;F6&#x2F;F12), so you can boot with your USB. You can disk partitioning in advance (or later in installation).</p>
<p>Then just follow installation guides.</p>
<p>Further reading: <a href="https://wiki.manjaro.org/index.php?title=Installation_Guides">https://wiki.manjaro.org/index.php?title=Installation_Guides</a></p>
<h2 id="Necessary-Steps"><a href="#Necessary-Steps" class="headerlink" title="Necessary Steps"></a>Necessary Steps</h2><p><strong>There is some necessary steps for Manjaro users.</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># rank your mirrors by speed</span><br><span class="line">sudo pacman-mirrors -g</span><br><span class="line"># force a refresh of all package lists and upgrade</span><br><span class="line">sudo pacman -Syyu</span><br><span class="line"># synchronize the repository databases and update the system&#x27;s packages</span><br><span class="line">sudo pacman -Syu</span><br><span class="line"></span><br><span class="line"># if not have git preinstalled</span><br><span class="line">sudo pacman -S git</span><br><span class="line"># if not have ssh preinstalled</span><br><span class="line">sudo pacman -S openssh</span><br></pre></td></tr></table></figure>

<p>Further reading: </p>
<ul>
<li><a href="http://mirrors.ustc.edu.cn/help/manjaro.html">http://mirrors.ustc.edu.cn/help/manjaro.html</a></li>
<li><a href="https://wiki.manjaro.org/index.php?title=Pacman_Tips">https://wiki.manjaro.org/index.php?title=Pacman_Tips</a></li>
</ul>
<p><strong>There is some necessary steps for Chinese users.</strong></p>
<p>Edit <code>/etc/pacman.conf</code>, add repo [archlinuxcn] to <code>/etc/pacman.conf</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># /etc/pacman.conf</span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line">Server = https://cdn.repo.archlinuxcn.org/$arch</span><br></pre></td></tr></table></figure>

<p>then add PGP keys</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure>

<p>Further reading: <a href="https://github.com/archlinuxcn/repo">https://github.com/archlinuxcn/repo</a></p>
<p>And welcome to <a href="https://www.archlinuxcn.org/">Arch Linux 中文社区</a>.</p>
<h2 id="Touchpad-Settings"><a href="#Touchpad-Settings" class="headerlink" title="Touchpad Settings"></a>Touchpad Settings</h2><h3 id="libinput"><a href="#libinput" class="headerlink" title="libinput"></a><a href="https://www.freedesktop.org/wiki/Software/libinput/">libinput</a></h3><p>libinput is a library to handle input devices in Wayland compositors and to provide a generic X.Org input driver.<br>libinput comes preinstalled with Manjaro.</p>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/Libinput">https://wiki.archlinux.org/index.php/Libinput</a></p>
<p>You can add &#x2F;etc&#x2F;X11&#x2F;xorg.conf.d&#x2F;30-touchpad.conf to extend functions of touchpad. Here is an example.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># /etc/X11/xorg.conf.d/30-touchpad.conf</span><br><span class="line">Section &quot;InputClass&quot;</span><br><span class="line">        Identifier &quot;libinput touchpad catchall&quot;</span><br><span class="line">        MatchIsTouchpad &quot;on&quot;</span><br><span class="line">        MatchDevicePath &quot;/dev/input/event*&quot;</span><br><span class="line">        Driver &quot;libinput&quot;</span><br><span class="line">        Option &quot;Tapping&quot; &quot;on&quot;               # tap to click</span><br><span class="line">        Option &quot;ClickMethod&quot; &quot;clickfinger&quot;  # two-finger click is a context click, three-finger click is a middle click</span><br><span class="line">        Option &quot;NaturalScrolling&quot; &quot;true&quot;    # natural (reverse) scrolling</span><br><span class="line">        Option &quot;ScroolMethod&quot; &quot;edge&quot;        # edge (vertical) scrolling</span><br><span class="line">        Option &quot;DisableWhileTyping&quot; &quot;true&quot;  # disable touchpad while typing</span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure>

<h3 id="libinput-gestures"><a href="#libinput-gestures" class="headerlink" title="libinput-gestures"></a><a href="https://github.com/bulletmark/libinput-gestures">libinput-gestures</a></h3><p>libinput-gestures is a utility which reads libinput gestures from your touchpad and maps them to gestures you configure in a configuration file.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># install libinput-gestures</span><br><span class="line">sudo pacman -S libinput-gestures</span><br></pre></td></tr></table></figure>

<p>After executing the above command, log out of your session completely, and then log back in to assign this group (or just reboot).</p>
<p>If you want to create your own custom gestures, edit ~&#x2F;.config&#x2F;libinput-gestures.conf. Here is an example.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ~/.config/libinput-gestures.conf</span><br><span class="line">gesture pinch in 2 xdotool key ctrl+minus       # 2指捏: 缩小</span><br><span class="line">gesture pinch out 2 xdotool key ctrl+plus       # 2指张: 放大</span><br><span class="line"></span><br><span class="line">gesture swipe left 3 xdotool key shift+alt+Tab  # 3指左划: 切换窗口</span><br><span class="line">gesture swipe right 3 xdotool key alt+Tab       # 3指右划:逆向切换窗口</span><br><span class="line">gesture swipe down 3 xdotool key ctrl+alt+F12   # 3指下划显示桌面</span><br><span class="line"></span><br><span class="line">gesture swipe left 4 xdotool key ctrl+alt+Right # 4指左划: 切换到左侧工作区</span><br><span class="line">gesture swipe right 4 xdotool key ctrl+alt+Left # 4指右划: 切换到右侧工作区</span><br></pre></td></tr></table></figure>

<p>Then start libinput-gestures. (however, it’s not neccessary, pacman help you do these)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">libinput-gestures-setup start</span><br><span class="line">libinput-gestures-setup autostart</span><br></pre></td></tr></table></figure>

<h2 id="Recommended-Projects"><a href="#Recommended-Projects" class="headerlink" title="Recommended Projects"></a>Recommended Projects</h2><p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/General_recommendations">https://wiki.archlinux.org/index.php/General_recommendations</a></p>
<h3 id="Oh-My-Zsh"><a href="#Oh-My-Zsh" class="headerlink" title="Oh My Zsh"></a><a href="http://ohmyz.sh/">Oh My Zsh</a></h3><p>Oh My Zsh is a delightful community-driven framework for managing your zsh configuration.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># install Zsh (Manjaro pre-install Zsh)</span><br><span class="line">sudo pacman -S zsh</span><br><span class="line"># install git (if not pre-installed)</span><br><span class="line">sudo pacman -S git</span><br><span class="line"></span><br><span class="line"># install Oh My Zsh via curl</span><br><span class="line">sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure>

<p>Further reading: <a href="https://github.com/robbyrussell/oh-my-zsh/wiki/">https://github.com/robbyrussell/oh-my-zsh/wiki/</a></p>
<p>Plugin archlinux and plugin git is useful. They are worth learning, and save much time. More plugins are waiting for your discovering.</p>
<ul>
<li><a href="https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/archlinux">https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/archlinux</a></li>
<li><a href="https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/git">https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins/git</a></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># .zshrc</span><br><span class="line">plugins=(git archlinux)</span><br></pre></td></tr></table></figure>

<p>I prefer zsh-theme af-magic.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ~/.zshrc</span><br><span class="line">ZSH_THEME=&quot;af-magic&quot;</span><br></pre></td></tr></table></figure>

<h3 id="Input-Method-IME"><a href="#Input-Method-IME" class="headerlink" title="Input Method (IME)"></a>Input Method (IME)</h3><ul>
<li><a href="http://pinyin.sogou.com/linux/">Sogoupinyin</a>, a input method for linux, supports Jianpin, fuzzy syllables, cloud input, English input, mixed skin.</li>
<li><a href="http://rime.im/">Rime</a>, based on schemas from the Rime IME project.</li>
<li><a href="https://www.google.com/intl/zh-CN/ime/pinyin/index.html">Googlepinyin</a>, the Google pinyin IME for Android.</li>
</ul>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/Fcitx">https://wiki.archlinux.org/index.php/Fcitx</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># install sogoupinyin</span><br><span class="line">sudo pacman -S fcitx-sogoupinyin</span><br><span class="line"></span><br><span class="line"># or you may prefer Rime</span><br><span class="line">sudo pacman -S fcitx-rime</span><br><span class="line"></span><br><span class="line"># or you may prefer Googlepinyin</span><br><span class="line">sudo pacman -S fcitx-googlepinyin</span><br><span class="line"></span><br><span class="line">sudo pacman -S fcitx-im # input method module</span><br><span class="line">sudo pacman -S fcitx-configtool # GUI configure tools</span><br></pre></td></tr></table></figure>

<p>Type <code>fcitx</code> to see whether fcitx is working correctly, if success, use shortcut <kbd>ctrl+space</kbd> to see what happened.</p>
<p>If failed, add the following lines to your desktop start up script files to register the input method modules and support xim programs.</p>
<ul>
<li>Use <code>.xprofile</code> if you are using GDM, LightDM or SDDM with Xorg.</li>
<li>Use <code>/etc/environment</code> for Wayland, it will not read environment variables stored in ~&#x2F;.xprofile</li>
<li>Use <code>.xinitrc</code> if you are using startx or Slim.</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=@im=fcitx</span><br></pre></td></tr></table></figure>

<h3 id="Source-Code-Pro"><a href="#Source-Code-Pro" class="headerlink" title="Source Code Pro"></a><a href="https://adobe-fonts.github.io/source-code-pro/">Source Code Pro</a></h3><p>Source Code Pro is a monospaced font family for user interface and coding environments.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S adobe-source-code-pro-fonts</span><br></pre></td></tr></table></figure>

<h3 id="TLP"><a href="#TLP" class="headerlink" title="TLP"></a><a href="http://linrunner.de/en/tlp/tlp.html">TLP</a></h3><p>TLP brings you the benefits of advanced power management for Linux without the need to understand every technical detail. TLP comes with a default configuration already optimized for battery life, so you may just install and forget it.</p>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/TLP">https://wiki.archlinux.org/index.php/TLP</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># install tlp and tlp-rdw (optional)</span><br><span class="line">sudo pacman -S tlp tlp-rdw</span><br><span class="line"></span><br><span class="line"># enable TLP&#x27;s services</span><br><span class="line">sudo systemctl enable tlp.service</span><br><span class="line">sudo systemctl enable tlp-sleep.service</span><br><span class="line"></span><br><span class="line"># Using the Radio Device Wizard (tlp-rdw) requires an additional service</span><br><span class="line">sudo systemctl enable NetworkManager-dispatcher.service</span><br><span class="line"></span><br><span class="line"># mask the following services to avoid conflicts and assure</span><br><span class="line"># proper operation of TLP&#x27;s radio device switching options</span><br><span class="line">sudo systemctl mask systemd-rfkill.service</span><br><span class="line">sudo systemctl mask systemd-rfkill.socket</span><br></pre></td></tr></table></figure>
<p>See also: <a href="http://linrunner.de/en/tlp/docs/tlp-linux-advanced-power-management.html#installation">http://linrunner.de/en/tlp/docs/tlp-linux-advanced-power-management.html#installation</a></p>
<h3 id="Yaourt"><a href="#Yaourt" class="headerlink" title="Yaourt"></a><a href="https://archlinux.fr/yaourt-en">Yaourt</a></h3><p>Yaourt is a command line interface program which complete pacman for installing software on Archlinux.</p>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/AUR_helpers">https://wiki.archlinux.org/index.php/AUR_helpers</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S yaourt</span><br></pre></td></tr></table></figure>
<p>Further reading: <a href="https://github.com/archlinuxfr/yaourt">https://github.com/archlinuxfr/yaourt</a></p>
<h3 id="Shadowsocks-Qt5"><a href="#Shadowsocks-Qt5" class="headerlink" title="Shadowsocks-Qt5"></a><a href="https://github.com/shadowsocks/shadowsocks-qt5">Shadowsocks-Qt5</a></h3><p>Shadowsocks-Qt5 is a native and cross-platform shadowsocks GUI client with advanced features.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S shadowsocks-qt5</span><br></pre></td></tr></table></figure>

<h3 id="Shadowsocks-libev"><a href="#Shadowsocks-libev" class="headerlink" title="Shadowsocks-libev"></a><a href="https://github.com/shadowsocks/shadowsocks-libev">Shadowsocks-libev</a></h3><p>Shadowsocks-libev is a lightweight secured SOCKS5 proxy for embedded devices and low-end boxes.</p>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/Shadowsocks">https://wiki.archlinux.org/index.php/Shadowsocks</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S shadowsocks-libev</span><br></pre></td></tr></table></figure>

<h3 id="Chromium"><a href="#Chromium" class="headerlink" title="Chromium"></a><a href="https://www.chromium.org/Home">Chromium</a></h3><p>Chromium is an open-source browser project that aims to build a safer, faster, and more stable way for all Internet users to experience the web.</p>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/Chromium">https://wiki.archlinux.org/index.php/Chromium</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># install Chromium</span><br><span class="line">sudo pacman -S chromium</span><br><span class="line"># flash support, alternative</span><br><span class="line">sudo pacman -S pepper-flash flashplugin</span><br><span class="line"></span><br><span class="line"># or you may prefer Chrome</span><br><span class="line">sudo pacman -S google-chrome</span><br></pre></td></tr></table></figure>

<h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a><a href="https://code.visualstudio.com/">Visual Studio Code</a></h3><p>VS Code is a new type of tool that combines the simplicity of a code editor with what developers need for their core edit-build-debug cycle.</p>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/Visual_Studio_Code">https://wiki.archlinux.org/index.php/Visual_Studio_Code</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S visual-studio-code</span><br></pre></td></tr></table></figure>

<h3 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a><a href="https://atom.io/">Atom</a></h3><p>Outdated.</p>
<p>Atom is a hackable text editor for the 21st century, built on Electron, and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.</p>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/atom">https://wiki.archlinux.org/index.php/atom</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S atom-editor-bin # latest stable version</span><br></pre></td></tr></table></figure>

<h3 id="NetEase-Cloud-Music"><a href="#NetEase-Cloud-Music" class="headerlink" title="NetEase Cloud Music"></a><a href="http://music.163.com/#/download">NetEase Cloud Music</a></h3><p>NetEase Cloud Music is a music and video streaming service developed and operated by <a href="http://www.163.com/">NetEase</a>. Now there is <a href="http://music.163.com/#/download">NetEase Cloud Music for Linux</a>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S netease-cloud-music</span><br></pre></td></tr></table></figure>

<h3 id="Docky"><a href="#Docky" class="headerlink" title="Docky"></a><a href="http://www.go-docky.com/">Docky</a></h3><p>Docky is an advanced shortcut bar that sits at the edges of your screen.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S docky</span><br></pre></td></tr></table></figure>

<h3 id="Paper-Theme"><a href="#Paper-Theme" class="headerlink" title="Paper Theme"></a><a href="https://snwh.org/paper">Paper Theme</a></h3><p>Paper is a modern freedesktop icon theme whose design is based around the use of bold colours and simple geometric shapes to compose icons.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S paper-icon-theme</span><br><span class="line">sudo pacman -S paper-gtk-theme</span><br></pre></td></tr></table></figure>

<h3 id="Peek"><a href="#Peek" class="headerlink" title="Peek"></a><a href="https://github.com/phw/peek">Peek</a></h3><p>Peek is a Simple screencast tool that produces GIF animations.</p>
<p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/List_of_applications/Multimedia">https://wiki.archlinux.org/index.php/List_of_applications/Multimedia</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yaourt -S peek</span><br></pre></td></tr></table></figure>

<h3 id="xmodmap"><a href="#xmodmap" class="headerlink" title="xmodmap"></a>xmodmap</h3><p>xmodmap is a utility for modifying keymaps and pointer button mappings in Xorg.</p>
<p>My <code>~/.Xmodmap</code> is:</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">;---- H === Left ----</span><br><span class="line">CapsLock &amp; h::</span><br><span class="line"><span class="keyword">if</span> <span class="title function_ invoke__">getkeystate</span>(<span class="string">&quot;alt&quot;</span>) = <span class="number">0</span></span><br><span class="line"><span class="built_in">Send</span>, &#123;Left &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">Send</span>, +&#123;Left &#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">;---- J ===Up ----</span><br><span class="line">CapsLock &amp; j::</span><br><span class="line"><span class="keyword">if</span> <span class="title function_ invoke__">getkeystate</span>(<span class="string">&quot;alt&quot;</span>) = <span class="number">0</span></span><br><span class="line"><span class="built_in">Send</span>, &#123;Up&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">Send</span>, +&#123;Up&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">;---- K === Down ----</span><br><span class="line">CapsLock &amp; k::</span><br><span class="line"><span class="keyword">if</span> <span class="title function_ invoke__">getkeystate</span>(<span class="string">&quot;alt&quot;</span>) = <span class="number">0</span></span><br><span class="line"><span class="built_in">Send</span>, &#123;Down&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">Send</span>, +&#123;Down&#125;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">;---- L === Right ----</span><br><span class="line">CapsLock &amp; l::</span><br><span class="line"><span class="keyword">if</span> <span class="title function_ invoke__">getkeystate</span>(<span class="string">&quot;alt&quot;</span>) = <span class="number">0</span></span><br><span class="line"><span class="built_in">Send</span>, &#123;Right&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">Send</span>, +&#123;Right&#125;</span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></table></figure>

<p>Arch wiki: <a href="https://wiki.archlinux.org/index.php/xmodmap">https://wiki.archlinux.org/index.php/xmodmap</a></p>
<h2 id="Remainders"><a href="#Remainders" class="headerlink" title="Remainders"></a>Remainders</h2><p>About dotfiles:</p>
<ul>
<li><p><a href="https://wiki.archlinux.org/index.php/Dotfiles">https://wiki.archlinux.org/index.php/Dotfiles</a></p>
</li>
<li><p><a href="https://wiki.manjaro.org/index.php?title=Important_hidden_.dot_files_in_your_home_partition">https://wiki.manjaro.org/index.php?title=Important_hidden_.dot_files_in_your_home_partition</a></p>
</li>
<li><p><a href="https://dotfiles.github.io/">https://dotfiles.github.io/</a></p>
</li>
<li><p><a href="https://luolei.org//dotfiles-tutorial/">https://luolei.org//dotfiles-tutorial/</a></p>
</li>
<li><p>About Arch Linux: <a href="https://wiki.archlinux.org/index.php/Arch_Linux">https://wiki.archlinux.org/index.php/Arch_Linux</a></p>
</li>
<li><p>Arch Wiki: <a href="https://wiki.archlinux.org/index.php/List_of_applications">https://wiki.archlinux.org/index.php/List_of_applications</a></p>
</li>
<li><p>Arch Linux RSS Feeds: <a href="https://www.archlinux.org/feeds/">https://www.archlinux.org/feeds/</a></p>
</li>
<li><p>Manjaro Forum: <a href="https://forum.manjaro.org/">https://forum.manjaro.org/</a></p>
</li>
<li><p>Arch Linux BBS: <a href="https://bbs.archlinux.org/">https://bbs.archlinux.org/</a></p>
</li>
<li><p>Arch Linux 中文社区: <a href="https://bbs.archlinuxcn.org/">https://bbs.archlinuxcn.org/</a></p>
</li>
<li><p>About screenshot: <a href="https://wiki.archlinux.org/index.php/Taking_a_screenshot">https://wiki.archlinux.org/index.php/Taking_a_screenshot</a></p>
</li>
<li><p>Virtual Box: <a href="https://www.virtualbox.org/">https://www.virtualbox.org/</a></p>
</li>
<li><p>About backup: <a href="http://www.cnblogs.com/yychi/p/5860027.html">http://www.cnblogs.com/yychi/p/5860027.html</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>record</tag>
        <tag>linux</tag>
        <tag>arch</tag>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>Listen to Music</title>
    <url>/Listen-to-Music/</url>
    <content><![CDATA[<h2 id="小缘"><a href="#小缘" class="headerlink" title="小缘"></a>小缘</h2><p><a href="https://yuba.douyu.com/yukari">斗鱼主播</a>、<a href="https://space.bilibili.com/5055#!/">B站UP主</a>小缘。</p>
<span id="more"></span>

<p>可用歌单</p>
<ol>
<li><a href="https://music.163.com/playlist?id=115150783">小缘喵～最全的大毛歌单</a></li>
<li><a href="https://music.163.com/playlist?id=107675733">歌姬都是怪物系列【小缘篇】</a></li>
<li><a href="https://music.163.com/playlist?id=28872398">小缘喵的红心歌曲</a></li>
<li><a href="https://music.163.com/playlist?id=496719243">小缘喵的中文歌单</a></li>
<li><a href="https://music.163.com/playlist?id=72892139">❀小缘喵❀</a></li>
</ol>
<hr>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=310 height=430 src="//music.163.com/outchain/player?type=0&id=72892139&auto=0&height=430"></iframe>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>music</tag>
      </tags>
  </entry>
  <entry>
    <title>Use Hexo to Create Blog</title>
    <url>/Use-Hexo-to-Create-Blog/</url>
    <content><![CDATA[<p><a href="https://hexo.io/">Hexo</a> is a fast, simple and powerful blog framework. You write posts in Markdown and Hexo generates static files with a beautiful theme in seconds.</p>
<span id="more"></span>

<h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><p>Installing Hexo is quite easy. However, you do need to have a couple of other things installed first:</p>
<ul>
<li><a href="https://nodejs.org/en/">Node.js</a></li>
<li><a href="https://git-scm.com/">Git</a> (and complete <a href="https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup">First-Time Git Setup</a>)</li>
</ul>
<p>For Chinese users, it is recommended to use <a href="https://cnpmjs.org/">cnpm</a>.</p>
<blockquote>
<p>Tip: If using Arch Linux, notice <a href="https://wiki.archlinux.org/index.php/Node.js#Allow_user-wide_installations">Arch Wiki: Node.js#Allow_user-wide_installations</a>.</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># install command cnpm</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"></span><br><span class="line"># or just set registry</span><br><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Run the following commands</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli --location=global</span><br><span class="line">hexo init hexo-site</span><br><span class="line">cd hexo-site</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>Then you can see a web page at <a href="http://localhost:4000/">http://localhost:4000/</a>.</p>
<p>Or a more convenient way: use neoFelhz’s <a href="https://github.com/neoFelhz/HexoKit" title="https://github.com/neoFelhz/HexoKit">HexoKit</a>.</p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>For more information, visit <a href="https://hexo.io/docs/commands.html">https://hexo.io/docs/commands.html</a>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># in hexo-site</span><br><span class="line"># start a local server, by default, Hexo is running at http://localhost:4000/</span><br><span class="line">hexo s</span><br><span class="line"></span><br><span class="line"># clean the cache file (db.json)</span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line"># generate static files (/public)</span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"># deploy website</span><br><span class="line">hexo d</span><br><span class="line"></span><br><span class="line"># create new article in source/_posts</span><br><span class="line">hexo new &quot;title&quot;</span><br></pre></td></tr></table></figure>

<p>In addition, Hexo provides tag plugins: a useful way for you to quickly add specific content to your posts. For more information, visit <a href="https://hexo.io/docs/tag-plugins">https://hexo.io/docs/tag-plugins</a>.</p>
<h2 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h2><p>I recommend <a href="https://github.com/next-theme/hexo-theme-next">hexo-theme-next</a> <del>and <a href="https://github.com/viosey/hexo-theme-material">hexo-theme-material</a></del>. You could read a short comparison of popular Hexo themes at <a href="https://en.abnerchou.me/Blog/5c00ca67">https://en.abnerchou.me/Blog/5c00ca67</a>. For more themes, visit <a href="https://hexo.io/themes/index.html">https://hexo.io/themes/index.html</a>.</p>
<h2 id="Website-Optimization"><a href="#Website-Optimization" class="headerlink" title="Website Optimization"></a>Website Optimization</h2><p>A simple optimizing tool: <a href="https://gulpjs.com/">Gulp</a>. Gulp is a toolkit for automating painful or time-consuming tasks in your development workflow.</p>
<blockquote>
<p>Tip: <a href="https://github.com/chenzhutian/hexo-all-minifier">hexo-all-minifier</a> is a more convenient plugin, but maybe with more problems.</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># install Gulp globally</span><br><span class="line">npm install gulp-cli --location=global</span><br><span class="line"></span><br><span class="line"># in hexo-site, install some relative plugins locally</span><br><span class="line">npm install gulp gulp-uglify gulp-clean-css gulp-htmlmin gulp-htmlclean gulp-imagemin gulp-concat –-save-dev</span><br></pre></td></tr></table></figure>
<p><code>gulpfiles.js</code> should be in the root of hexo-site (like <a href="https://github.com/agragregra/OptimizedHTML-5/blob/master/gulpfile.js">his gulpfile.js</a>). Then the following command (if use his gulpfiles.js) will optimize your generated files.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gulp build</span><br></pre></td></tr></table></figure>

<p>Other optimizations such as SEO (Search Engine Optimization): to be done.</p>
<blockquote>
<p>Tip: You may want to use <a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> to create one and only one link for every post.</p>
</blockquote>
<h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><p>Here are several hosting service providers.</p>
<h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p><a href="https://pages.github.com/">GitHub Pages</a> is designed to host your personal, organization, or project pages directly from a GitHub repository. <a href="https://help.github.com/articles/what-is-github-pages/">What is GitHub Pages?</a> says it</p>
<ul>
<li>may be no larger than 1GB</li>
<li>limit of 10 builds per hour</li>
<li>limit of 100GB or 100,000 requests per month</li>
</ul>
<p>It’s easy to use <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a> to complete deployment, visit <a href="https://hexo.io/docs/github-pages">https://hexo.io/docs/github-pages</a> for other plugins.</p>
<p>For example, if you want to push the source files and generated files at the same time to two different branches, the option should be like</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="comment"># push the generated files (static site, i.e., hexo-site/public)</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@github.com:&lt;username&gt;/&lt;username&gt;.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="comment"># push the source files</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@github.com:&lt;username&gt;/&lt;usersrepository&gt;.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">src</span></span><br><span class="line">    <span class="attr">extend_dirs:</span> <span class="string">/</span></span><br><span class="line">    <span class="attr">ignore_hidden:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">ignore_pattern:</span></span><br><span class="line">        <span class="attr">public:</span> <span class="string">.</span></span><br></pre></td></tr></table></figure>

<h3 id="Coding-Pages"><a href="#Coding-Pages" class="headerlink" title="Coding Pages"></a><del>Coding Pages</del></h3><p>Outdated.</p>
<p>It’s recommended to host your site to <a href="https://coding.net/pages">Coding Pages</a> if your main readers living in Chinese Mainland. Just add <code>Hosted by Coding Pages</code> to avoid <a href="https://coding.net/u/coding/p/Coding-Feedback/topic/337715">redirection</a>.</p>
<p>Use it as same as GitHub Pages. Just one difference: don’t need <code>CNAME</code> file, please set Pages service settings.</p>
<h3 id="Netlify-Recommend"><a href="#Netlify-Recommend" class="headerlink" title="Netlify (Recommend)"></a>Netlify (Recommend)</h3><blockquote>
<p>“Netlify has everything you need to make a high performance site or web-app. You just push your code.”<br>–Tom Preston-Werner, Founder of GitHub &amp; Creator of Jekyll</p>
</blockquote>
<p>I think Netlify is the best choice. <a href="https://www.netlify.com/docs/">Netlify Docs</a> says that they provide:</p>
<ul>
<li>One-Click SSL: Netlify integrates with Let’s Encrypt and automatically provisions, distributes and renews your certificate</li>
<li>HTTP&#x2F;2 works when HTTPS is enabled</li>
<li>Force SSL</li>
<li>Continuous Deployment: Each time you push to GitHub, Netlify runs a build with your tool of choice and deploys the result to CDN</li>
</ul>
<p>Netlify lets you link a GitHub repository to a site. Each time you push to GitHub, Netlify runs a build with your tool of choice and deploys the result to Netlify’s powerful CDN. You also can deploy your static site without linking a GitHub (or GitLab) repository.<br>Use <a href="https://app.netlify.com/">web UI</a> or <a href="https://www.netlify.com/docs/cli/">command line tools</a> to deploy and generate.</p>
<blockquote>
<p>By the way, <a href="https://www.netlify.com/blog/2016/01/12/this-weekends-ddos-attack-and-whats-in-a-cname/">Matt Biilmann</a> and <a href="https://www.netlify.com/docs/custom-domains/">Netlify</a> recommends <code>www.</code> domain unless you use ALIAS records or ANAME records, I’m naive, I drop <code>www.</code> directly. Users can’t remove the <code>sitename.netlify.com</code> “default” hostname on Netlify, so I have three blog addresses now.</p>
</blockquote>
<h3 id="Firebase"><a href="#Firebase" class="headerlink" title="Firebase"></a>Firebase</h3><p>Deploying site to <a href="https://firebase.google.com/">Firebase</a> may be a good choice.</p>
<p><a href="https://firebase.google.com/products/hosting/">Firebase Hosting</a> tells us Firebase</p>
<ul>
<li>files deployed to Firebase Hosting are cached on SSDs at CDN edge servers around the world</li>
<li>provides free SSL certificates for custom domains</li>
<li>force SSL</li>
</ul>
<p>Read <a href="https://firebase.google.com/docs/hosting/" title="https://firebase.google.com/docs/hosting/">Firebase Hosting Docs</a> to learn how to deploy static site to Firebase.</p>
<blockquote>
<p>You need to cross GFW, and have a Google account.</p>
</blockquote>
<p>Login and create a project in <a href="https://console.firebase.google.com/" title="https://console.firebase.google.com/">Firebase console</a>, get project-id.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g firebase-tools</span><br><span class="line"></span><br><span class="line"># may need set proxy for teriminal temporarily,</span><br><span class="line"># as follows (socks5) (optional)</span><br><span class="line">export http_proxy=socks5://127.0.0.1:1080</span><br><span class="line"></span><br><span class="line"># in hexo-site</span><br><span class="line">firebase login</span><br><span class="line">firebase init</span><br><span class="line">firebase use --add &lt;project-id&gt;</span><br><span class="line"></span><br><span class="line"># all right, try to deploy /public to Firebase</span><br><span class="line">firebase deploy</span><br></pre></td></tr></table></figure>
<blockquote>
<p>In fact, Firebase is user-friendly (it has Chinese tutorial), just need to follow its guides. In its console, you can see your history record and learn how to bind domain name.</p>
</blockquote>
<p>Edit firebase.json to determine which files should be deployed.</p>
<h2 id="Easy-Deploy"><a href="#Easy-Deploy" class="headerlink" title="Easy Deploy"></a>Easy Deploy</h2><p>Life is short, why not using <a href="https://docs.npmjs.com/cli/run-script">npm-run-script</a>?<br>Add <code>&quot;scripts&quot;: &#123;&#125;</code> to <code>package.json</code>, as follows:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6.2.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;blogupd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp build &amp;&amp; hexo d&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>Then the following command will cover <code>hexo clean</code>, <code>hexo g</code>, <code>gulp build</code>, and <code>hexo d</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># in hexo-site</span><br><span class="line">npm run blogupd</span><br></pre></td></tr></table></figure>

<p>However, if you use Linux, you may prefer to create a shell script, or edit <code>.zshrc</code> (or <code>.bashrc</code>, etc.).</p>
<p>For example: a shell script <code>blogupd.sh</code>.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">cd ~/blog &amp;&amp; hexo clean &amp;&amp; hexo g &amp;&amp; gulp build &amp;&amp; hexo d &amp;&amp; cd -</span><br></pre></td></tr></table></figure>
<p>just run (<code>blogupd.sh</code> should be in current folder)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh blogupd.sh</span><br></pre></td></tr></table></figure>

<p>Or edit <code>~/.zshrc</code> (or <code>~/bashrc</code>).</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># ~/.zshrc</span><br><span class="line">alias blogupd=&quot;cd ~/blog &amp;&amp; hexo clean &amp;&amp; hexo g &amp;&amp; gulp build &amp;&amp; hexo d &amp;&amp; cd -&quot;</span><br></pre></td></tr></table></figure>
<p>just run (no matter where you are)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blogupd</span><br></pre></td></tr></table></figure>

<h2 id="Image-Hosting"><a href="#Image-Hosting" class="headerlink" title="Image Hosting"></a>Image Hosting</h2><p><a href="https://hexo.io/docs/asset-folders">Hexo’s Asset Folders</a> allows us to keep images or other files in <code>hexo-site/source/images</code> folder, use something like <code>![](/images/image.jpg)</code> to access them.</p>
<table>
<thead>
<tr>
<th align="center">Address</th>
<th align="center">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://sm.ms/">https://sm.ms</a></td>
<td align="center">support iOS and Android</td>
</tr>
<tr>
<td align="center"><a href="https://portal.qiniu.com/">https://portal.qiniu.com</a></td>
<td align="center">七牛云</td>
</tr>
<tr>
<td align="center"><a href="https://www.upyun.com/">https://www.upyun.com</a></td>
<td align="center">又拍云</td>
</tr>
<tr>
<td align="center"><a href="https://ooxx.ooo/upload">https://ooxx.ooo/upload</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="https://tuchuang001.com/">https://tuchuang001.com</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="https://lightpic.info/">https://lightpic.info</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="https://upload.cc/">https://upload.cc</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="http://photo.weibo.com/photos/upload">http://photo.weibo.com/photos/upload</a></td>
<td align="center">微博图床</td>
</tr>
<tr>
<td align="center"><a href="http://www.moepic.net/">http://www.moepic.net</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="http://www.z4a.net/">http://www.z4a.net</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="http://www.lofter.com/">http://www.lofter.com</a></td>
<td align="center">乐乎</td>
</tr>
<tr>
<td align="center"><a href="https://imgur.com/">https://imgur.com</a></td>
<td align="center">Imgur</td>
</tr>
<tr>
<td align="center"><a href="https://postimages.org/">https://postimages.org</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="https://imgsafe.org/">https://imgsafe.org</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="https://www.getcloudapp.com/">https://www.getcloudapp.com</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="https://www.img.ly/">https://www.img.ly</a></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"><a href="https://github.com/">https://github.com</a></td>
<td align="center">GitHub Projects. GitHub Issues</td>
</tr>
</tbody></table>
<h2 id="HTTPS-and-Secure-Symbol"><a href="#HTTPS-and-Secure-Symbol" class="headerlink" title="HTTPS and Secure Symbol"></a>HTTPS and Secure Symbol</h2><p>If you get SSL certificates for your custom domains, and in your pages “absolute” URLs point to secure content - images, scripts and css files (all need HTTPS), then, to the left of the web address, Firefox and Chrome (or Chromium) will show (like this blog)<img src="/uploads/lock.svg" align ="justify" width="20" height="20"></p>
<p>Otherwise, will show<img src="/uploads/neutral.svg" align ="justify" width="20" height="20"></p>
<p>You can use <a href="https://www.jitbit.com/sslcheck/">JitBit</a> to scan your website for non-secure content.</p>
<p>I don’t think a secure symbol provided by Chrome or Firefox is important… But it seems that browsers force us be “secure”.</p>
<h2 id="About-This-Blog"><a href="#About-This-Blog" class="headerlink" title="About This Blog"></a>About This Blog</h2><p>The comment system of my blog is Gitalk. Here is my whole custom settings: <a href="https://github.com/shangguanfch/shangguanfch.github.io/blob/master/README.md" title="https://github.com/shangguanfch/shangguanfch.github.io/blob/master/README.md">README.md</a>.</p>
<p>I choose Github Actions to deploy automatically, see <a href="https://vuepress-theme-reco.recoluan.com/views/other/github-actions.html#%E8%AE%BE%E7%BD%AE-secrets">Lasy：使用 GitHub Actions 自动部署博客</a>. <a href="https://www.travis-ci.org/">Travis CI</a> or <a href="https://about.gitlab.com/features/gitlab-ci-cd/">GitLab CI</a> is also a chioce.</p>
<p>Others’ relative articles:</p>
<ul>
<li><a href="http://qianling.pw/hexo-optimization/">Hexo Optimization</a></li>
</ul>
<h2 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h2><p>Update your Hexo blog when you are convenient.</p>
<p>use <code>npm outdated</code> to check which package is outadated.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ npm outdated</span><br></pre></td></tr></table></figure>
<p>then</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g npm-check-updates</span><br><span class="line">ncu -u</span><br></pre></td></tr></table></figure>
<p>Failed. So I edit <code>package.json</code>, and run</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>It succeeds.</p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>hexo</tag>
        <tag>netlify</tag>
      </tags>
  </entry>
  <entry>
    <title>Use Visual Studio Code</title>
    <url>/Use-Visual-Studio-Code/</url>
    <content><![CDATA[<p>My Visual Studio Code (VSC) usage.</p>
<span id="more"></span>

<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Download VSC from the <a href="https://code.visualstudio.com/">official website</a>, and install it with its tips.</p>
<h2 id="Custom-Settings"><a href="#Custom-Settings" class="headerlink" title="Custom Settings"></a>Custom Settings</h2><p><a href="https://github.com/tonsky/FiraCode">Fira Code</a> is a free monospaced font with programming ligatures.<br>ref: <a href="https://github.com/tonsky/FiraCode/wiki/VS-Code-Instructions">https://github.com/tonsky/FiraCode/wiki/VS-Code-Instructions</a></p>
<h2 id="Extensions"><a href="#Extensions" class="headerlink" title="Extensions"></a>Extensions</h2><h3 id="Settings-Sync"><a href="#Settings-Sync" class="headerlink" title="Settings Sync"></a>Settings Sync</h3><p>Outdated. It is integrated to VSC.<br>ref: <a href="https://code.visualstudio.com/docs/editor/settings-sync">https://code.visualstudio.com/docs/editor/settings-sync</a></p>
<h3 id="Material-Theme"><a href="#Material-Theme" class="headerlink" title="Material Theme"></a>Material Theme</h3><p><a href="https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme">Material Theme</a> is the official material theme for VSC, while <a href="https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-community-material-theme">Community Material Theme</a> is a theme maintained by the community with ‘legacy’ color schemes. <a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme">Material Icon Theme</a>, which provides Material Design Icons for VSC, has far more installers than <a href="https://marketplace.visualstudio.com/items?itemName=Equinusocio.vsc-material-theme-icons">Material Theme Icons</a>. According to my user experience, Material Icon Theme is also faster.</p>
<h3 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h3><p><a href="https://marketplace.visualstudio.com/items?itemName=shalldie.background">background</a> can bring background images to your VSC.</p>
<h3 id="Markdown-Preview-Enhanced"><a href="#Markdown-Preview-Enhanced" class="headerlink" title="Markdown Preview Enhanced"></a>Markdown Preview Enhanced</h3><p><a href="https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced">Markdown Preview Enhanced</a> is an extension to write markdown on VSC. <kbd>ctrl+k, ctrl+v</kbd> to see the preview. Visit <a href="https://shd101wyy.github.io/markdown-preview-enhanced/">its official website</a> to realize how to use.</p>
<h3 id="Marp-for-VS-Code"><a href="#Marp-for-VS-Code" class="headerlink" title="Marp for VS Code"></a>Marp for VS Code</h3><p><a href="https://github.com/marp-team/marp-vscode">Marp for VS Code</a> is a useful extension for making slides in markdown. It can transform md to html, pdf and pptx.</p>
<p><kbd>ctrl+alt+win+n</kbd> (Windows) to start writing a slide deck quickly.</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">marp:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="comment"># Your slide deck</span></span><br></pre></td></tr></table></figure>

<h3 id="Code-Runner"><a href="#Code-Runner" class="headerlink" title="Code Runner"></a>Code Runner</h3><p><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner">Code Runner</a> is a easy way to run code snippet or code file for multiple languages: C, C++, Java, JavaScript, PHP, Python, and so on.</p>
<h2 id="Build-C-x2F-C-Environment"><a href="#Build-C-x2F-C-Environment" class="headerlink" title="Build C&#x2F;C++ Environment"></a>Build C&#x2F;C++ Environment</h2><p>This chapter introduces how to build a C&#x2F;C++ environment on VSC on Windows.</p>
<p>Steps:</p>
<ol>
<li>Download C&#x2F;C++ Extension. Open VSC, click Extensions (扩展), or use shortcut <kbd>ctrl+shift+x</kbd>. Search C&#x2F;C++ and download it. To use Simplified Chinese UI, you can install Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code.</li>
<li>Install MinGW-w64. Install it from <a href="https://www.mingw-w64.org/downloads/">the official website of MinGW-w64</a>, or <a href="https://sourceforge.net/projects/mingw-w64/files/">its sourceforge page</a>. Notice: don’t install <a href="https://sourceforge.net/projects/mingw/">MinGW</a>.</li>
<li>Change environment virable. If you use win10 or win11, search “env” (环境变量), click <code>Edit the System Environment Variables</code> (编辑系统环境变量), click <code>Advanced</code> (高级) -&gt; <code>Environment Virables...</code> (环境变量), click <code>Path</code> (路径), click <code>new</code>, add the path <code>C:\MInGW\bin\</code> (change it accroding to your path). Run <code>gcc -v</code> on cmd to know whether you are successful.</li>
<li>Create a C&#x2F;C++ file. e.g., <code>main.cpp</code>, write some words in it, an example: <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;hello world&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>Create <code>tasks.json</code>. Click <code>Terminal</code> (终端) -&gt; <code>Configure Tasks...</code>, click <code>g++.exe</code>. Now, select <code>main.cpp</code>, click <code>Terminal</code> -&gt; <code>Run Task</code>, click <code>C/C++: g++.exe build active file</code>. Then a internal terminal will open to show the build result. If successfully, it will create <code>main.exe</code>.</li>
<li>Create <code>lauch.json</code>. Click <code>Run</code> (运行) -&gt; <code>Add Configuration...</code>.</li>
<li>Now, <kbd>F5</kbd> can start debugging.</li>
</ol>
<p>Further reading:</p>
<ul>
<li><a href="https://code.visualstudio.com/docs/cpp/config-mingw">https://code.visualstudio.com/docs/cpp/config-mingw</a></li>
<li><a href="https://codevoweb.com/set-up-vs-code-to-write-and-debug-cpp-programs/">https://codevoweb.com/set-up-vs-code-to-write-and-debug-cpp-programs/</a></li>
</ul>
<h2 id="Simple-ACM"><a href="#Simple-ACM" class="headerlink" title="Simple ACM"></a>Simple ACM</h2><p>If you are a ACMer, <a href="https://marketplace.visualstudio.com/items?itemName=km.competitive-coding-helper">Competitive Coding Helper</a> is a good extension to test your code.</p>
<p>If you write codes in your computer, you can click settings-&gt;<code>用户代码片段</code>, create <code>cpp.json</code>, which will efficiently save your time. my <code>cpp.json</code> is as follows,</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;cdf&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;#include&lt;bits/stdc++.h&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define iof std::ios::sync_with_stdio(0),cin.tie(0),cout.tie(0)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define rd(n) cin&gt;&gt;n&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define rd2(a,b) cin&gt;&gt;a&gt;&gt;b&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define rdn(ar,a,n) rep(i,a,n) cin&gt;&gt;ar[i];&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define prt(n) cout&lt;&lt;n&lt;&lt;el&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define dbg(n) cout&lt;&lt;#n&lt;&lt;&#x27;=&#x27;&lt;&lt;n&lt;&lt;el&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define dbgn(ar,a,n) cout&lt;&lt;#ar&lt;&lt;&#x27;=&#x27;;rep(i,a,n) cout&lt;&lt;ar[i]&lt;&lt; &#x27; &#x27;;cout&lt;&lt;el&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define rep(i,a,b) for (int i=a;i&lt;(int)b;i++)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define per(i,a,b) for (int i=(int)b;i&gt;=a;i--)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define str string&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define pii pair&lt;int, int&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define mm memset&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define elif else if&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define mkp make_pair&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define pb push_back&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define fi first&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define se second&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define inf 0x3f3f3f3f&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define el &#x27;\\n&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#define endl &#x27;\\n&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;typedef long long ll;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;typedef long double ld;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;using namespace std;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;const int mod=1e9+7;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;const int N=1e5+1;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;\n\nvoid solve()\n&#123;\n\tint n;\n\trd(n);\n\t$0\n&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;\nint main() &#123;\n\tiof;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;\tint t;\n\trd(t);\n\twhile(t--) solve();&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;\treturn 0;\n&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;init codeforce model&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;file&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filein&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;#ifndef ONLINE_JUDGE&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;freopen(\&quot;in.txt\&quot;,\&quot;r\&quot;,stdin);&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;#endif&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;filein&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>Then <code>prt(n)</code> can replace <code>cout&lt;&lt;n&lt;&lt;&#39;\n&#39;</code>, <code>rep(i,a,b)</code> can replace <code>for(int i=a;i&lt;b;i++)</code>, and so on. Specifically, I establish a structure of <code>while(t--) solve()</code> to adapt to the testcases of codeforces. Type <code>cdf</code> and Enter, it will add above codes to your <code>.cpp</code> file.</p>
<h2 id="Clang-Format"><a href="#Clang-Format" class="headerlink" title="Clang-Format"></a>Clang-Format</h2><p>Use Everything to find <code>clang-format.exe</code>, then <code>./clang-format -style=LLVM -dump-config &gt; .clang-format</code> can generate a <code>.clang-format</code> file. The style can be LLVM, Google, Chromium, Mozilla, WebKit.</p>
<p>ref: <a href="https://zhuanlan.zhihu.com/p/356143396">zhihu: VS Code+Clang-format格式化代码</a></p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li>《Visual Studio Code权威指南》</li>
</ul>
]]></content>
      <categories>
        <category>editor</category>
      </categories>
      <tags>
        <tag>record</tag>
        <tag>editor</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
